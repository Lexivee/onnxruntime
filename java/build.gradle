plugins {
	id 'java'
	id "com.diffplug.gradle.spotless" version "3.26.0"
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {

}

java {
	withJavadocJar()
	withSourcesJar()
}

spotless {
	java {
		removeUnusedImports()
		googleJavaFormat()
	}
	format 'gradle', {
		target '**/*.gradle'
		trimTrailingWhitespace()
		indentWithTabs()
	}
}

def cmakeBuildDir = System.properties['cmakeBuildDir']

compileJava {
	options.compilerArgs += ["-h", "${projectDir}/src/main/native/"]
}

sourceSets.test {
	// add compiled native libs and test resource files
	resources.srcDirs += [
		"${cmakeBuildDir}/java/native-lib",
		"${cmakeBuildDir}/java/native-jnilib",
		"${rootProject.projectDir}/../csharp/testdata",
		"${rootProject.projectDir}/../onnxruntime/test/testdata"
	]
}

task jniJar(type: Jar) {
	classifier = 'jni'
	from sourceSets.main.output
	from "${cmakeBuildDir}/java/native-jnilib"
}

task libJar(type: Jar) {
	classifier = 'lib'
	from "${cmakeBuildDir}/java/native-lib"
}

task allJar(type: Jar) {
	classifier = 'all'
	from sourceSets.main.output
	from "${cmakeBuildDir}/java/native-jnilib"
	from "${cmakeBuildDir}/java/native-lib"
}

task runBuild(type: Copy) {
	from "${project.buildDir}"
	include 'libs/**'
	include 'docs/**'
	into "${cmakeBuildDir}/java"
}
runBuild.dependsOn jar
runBuild.dependsOn jniJar
runBuild.dependsOn libJar
runBuild.dependsOn allJar
runBuild.dependsOn sourcesJar
runBuild.dependsOn javadocJar
runBuild.dependsOn javadoc


task runCheck(type: Copy) {
	from "${project.buildDir}"
	include 'reports/**'
	into "${cmakeBuildDir}/java"
}
runCheck.dependsOn check


dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
	testImplementation 'com.google.protobuf:protobuf-java:3.10.0'
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}
