require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'

def shared
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => flags[:hermes_enabled],
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.disabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # Mobile build
  # ort_mobile_c_local_pod_path = ENV['ORT_MOBILE_C_LOCAL_POD_PATH']
  # if ort_mobile_c_local_pod_path != nil
  #   print 'Using onnxruntime-c pod at ', ort_mobile_c_local_pod_path, "\n"
  #   pod 'onnxruntime-mobile-c', :path => ort_mobile_c_local_pod_path
  # else
  #   pod 'onnxruntime-mobile-c'
  # end

  ort_c_local_pod_path = ENV['ORT_C_LOCAL_POD_PATH']
  if ort_c_local_pod_path != nil
    print 'Using onnxruntime-c pod at ', ort_c_local_pod_path, "\n"
    pod 'onnxruntime-c', :path => ort_c_local_pod_path
  else
    pod 'onnxruntime-c'
  end

  inherit! :search_paths
end

target 'OnnxruntimeModule' do
  shared
end

target 'OnnxruntimeModuleTest' do
  shared
end
