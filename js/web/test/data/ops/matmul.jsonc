[
  {
    "name": "matmul tests with no attributes",
    "operator": "MatMul",
    "attributes": [],
    "cases": [
      {
        "name": "multiplies 2D tensors [2,4]x[4,2]",
        "inputs": [
          {
            "data": [1, 2, 1, 3, 2, 3, 1, 2],
            "dims": [2, 4],
            "type": "float32"
          },
          {
            "data": [2, 1, 1, 2, 2, 3, 0, 4],
            "dims": [4, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [6, 20, 9, 19],
            "dims": [2, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 2D tensors [2,2]x[2,2]",
        "inputs": [
          {
            "data": [1, 2, 3, 4],
            "dims": [2, 2],
            "type": "float32"
          },
          {
            "data": [1, 2, 3, 4],
            "dims": [2, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [7, 10, 15, 22],
            "dims": [2, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 2D tensors [2,3]x[3,2]",
        "inputs": [
          {
            "data": [1, 2, 3, 4, 5, 6],
            "dims": [2, 3],
            "type": "float32"
          },
          {
            "data": [1, 2, 3, 4, 5, 6],
            "dims": [3, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [22, 28, 49, 64],
            "dims": [2, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 3D tensors",
        "inputs": [
          {
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 9, 10, 11, 12, 13, 14, 15, 16],
            "dims": [3, 2, 4],
            "type": "float32"
          },
          {
            "data": [
              13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29,
              30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [3, 4, 3],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [190, 200, 210, 470, 496, 522, 422, 496, 570, 510, 600, 690, 1254, 1296, 1338, 1726, 1784, 1842],
            "dims": [3, 2, 3],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 4D tensors",
        "inputs": [
          {
            "data": [
              37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
              20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [2, 3, 4, 3],
            "type": "float32"
          },
          {
            "data": [
              46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
              72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
              11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
              37, 38, 39, 40, 41, 42, 43, 44, 45
            ],
            "dims": [2, 3, 3, 5],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              5824, 5938, 6052, 6166, 6280, 6283, 6406, 6529, 6652, 6775, 6742, 6874, 7006, 7138, 7270, 7201, 7342,
              7483, 7624, 7765, 9910, 10060, 10210, 10360, 10510, 10504, 10663, 10822, 10981, 11140, 11098, 11266,
              11434, 11602, 11770, 11692, 11869, 12046, 12223, 12400, 15076, 15262, 15448, 15634, 15820, 15805, 16000,
              16195, 16390, 16585, 16534, 16738, 16942, 17146, 17350, 17263, 17476, 17689, 17902, 18115, 46, 52, 58, 64,
              70, 100, 115, 130, 145, 160, 154, 178, 202, 226, 250, 208, 241, 274, 307, 340, 892, 934, 976, 1018, 1060,
              1081, 1132, 1183, 1234, 1285, 1270, 1330, 1390, 1450, 1510, 1459, 1528, 1597, 1666, 1735, 2818, 2896,
              2974, 3052, 3130, 3142, 3229, 3316, 3403, 3490, 3466, 3562, 3658, 3754, 3850, 3790, 3895, 4000, 4105, 4210
            ],
            "dims": [2, 3, 4, 5],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 3D broadcasted to 4D",
        "inputs": [
          {
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 9, 10, 11, 12, 13, 14, 15, 16],
            "dims": [3, 2, 4],
            "type": "float32"
          },
          {
            "data": [
              37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
              20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [2, 3, 4, 3],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              430, 440, 450, 1094, 1120, 1146, 3974, 4048, 4122, 4830, 4920, 5010, 2766, 2808, 2850, 3814, 3872, 3930,
              70, 80, 90, 158, 184, 210, 1310, 1384, 1458, 1590, 1680, 1770, 1254, 1296, 1338, 1726, 1784, 1842
            ],
            "dims": [2, 3, 2, 3],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 2D broadcasted to 5D tensors",
        "inputs": [
          {
            "data": [1, 2, 1, 3, 2, 3, 1, 2],
            "dims": [2, 4],
            "type": "float32"
          },
          {
            "data": [
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
              75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
              122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
              143, 144, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
              27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 145, 146, 147,
              148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
              169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
              190, 191, 192
            ],
            "dims": [4, 3, 2, 4, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              369, 376, 414, 422, 425, 432, 478, 486, 481, 488, 542, 550, 537, 544, 606, 614, 593, 600, 670, 678, 649,
              656, 734, 742, 705, 712, 798, 806, 761, 768, 862, 870, 817, 824, 926, 934, 873, 880, 990, 998, 929, 936,
              1054, 1062, 985, 992, 1118, 1126, 33, 40, 30, 38, 89, 96, 94, 102, 145, 152, 158, 166, 201, 208, 222, 230,
              257, 264, 286, 294, 313, 320, 350, 358, 1041, 1048, 1182, 1190, 1097, 1104, 1246, 1254, 1153, 1160, 1310,
              1318, 1209, 1216, 1374, 1382, 1265, 1272, 1438, 1446, 1321, 1328, 1502, 1510
            ],
            "dims": [4, 3, 2, 2, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 2D broadcasted to 4D tensors",
        "inputs": [
          {
            "data": [1, 2, 1, 3, 2, 3, 1, 2],
            "dims": [2, 4],
            "type": "float32"
          },
          {
            "data": [
              37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
              63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
              20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [2, 3, 4, 3],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              298, 305, 312, 329, 337, 345, 382, 389, 396, 425, 433, 441, 466, 473, 480, 521, 529, 537, 46, 53, 60, 41,
              49, 57, 130, 137, 144, 137, 145, 153, 214, 221, 228, 233, 241, 249
            ],
            "dims": [2, 3, 2, 3],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 4D broadcasted to 5D tensors",
        "inputs": [
          {
            "data": [
              1, 2, 3, 4, 5, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 3, 4, 5, 6,
              7, 8, 1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 6, 7, 8
            ],
            "dims": [3, 2, 2, 4],
            "type": "float32"
          },
          {
            "data": [
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
              75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
              122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
              143, 144, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
              27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 145, 146, 147,
              148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
              169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
              190, 191, 192
            ],
            "dims": [4, 3, 2, 4, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              530, 540, 1362, 1388, 4450, 4524, 5410, 5500, 2866, 2908, 3954, 4012, 770, 780, 1986, 2012, 850, 860,
              2194, 2220, 930, 940, 2402, 2428, 1010, 1020, 2610, 2636, 8002, 8076, 9730, 9820, 4882, 4924, 6738, 6796,
              1250, 1260, 3234, 3260, 1330, 1340, 3442, 3468, 1410, 1420, 3650, 3676, 50, 60, 114, 140, 898, 972, 1090,
              1180, 850, 892, 1170, 1228, 290, 300, 738, 764, 370, 380, 946, 972, 450, 460, 1154, 1180, 1490, 1500,
              3858, 3884, 11554, 11628, 14050, 14140, 6898, 6940, 9522, 9580, 1730, 1740, 4482, 4508, 1810, 1820, 4690,
              4716, 1890, 1900, 4898, 4924
            ],
            "dims": [4, 3, 2, 2, 2],
            "type": "float32"
          }
        ]
      },

      {
        "name": "multiplies 5D with 2D tensors",
        "inputs": [
          {
            "data": [
              73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
              38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
              64, 65, 66, 67, 68, 69, 70, 71, 72
            ],
            "dims": [5, 3, 1, 2, 3],
            "type": "float32"
          },
          {
            "data": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
            "dims": [3, 5],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              1342, 1564, 1786, 2008, 2230, 1396, 1627, 1858, 2089, 2320, 1450, 1690, 1930, 2170, 2410, 1504, 1753,
              2002, 2251, 2500, 1558, 1816, 2074, 2332, 2590, 1612, 1879, 2146, 2413, 2680, 46, 52, 58, 64, 70, 100,
              115, 130, 145, 160, 154, 178, 202, 226, 250, 208, 241, 274, 307, 340, 262, 304, 346, 388, 430, 316, 367,
              418, 469, 520, 370, 430, 490, 550, 610, 424, 493, 562, 631, 700, 478, 556, 634, 712, 790, 532, 619, 706,
              793, 880, 586, 682, 778, 874, 970, 640, 745, 850, 955, 1060, 694, 808, 922, 1036, 1150, 748, 871, 994,
              1117, 1240, 802, 934, 1066, 1198, 1330, 856, 997, 1138, 1279, 1420, 910, 1060, 1210, 1360, 1510, 964,
              1123, 1282, 1441, 1600, 1018, 1186, 1354, 1522, 1690, 1072, 1249, 1426, 1603, 1780, 1126, 1312, 1498,
              1684, 1870, 1180, 1375, 1570, 1765, 1960, 1234, 1438, 1642, 1846, 2050, 1288, 1501, 1714, 1927, 2140
            ],
            "dims": [5, 3, 1, 2, 5],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 2D broadcasted to 3D",
        "inputs": [
          {
            "data": [1, 2, 3, 4, 5, 6],
            "dims": [2, 3],
            "type": "float32"
          },
          {
            "data": [
              13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29,
              30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [3, 3, 4],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              110, 116, 122, 128, 263, 278, 293, 308, 38, 44, 50, 56, 83, 98, 113, 128, 182, 188, 194, 200, 443, 458,
              473, 488
            ],
            "dims": [3, 2, 4],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 3D broadcasted to 5D",
        "inputs": [
          {
            "data": [
              13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29,
              30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [3, 4, 3],
            "type": "float32"
          },
          {
            "data": [
              73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
              38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
              64, 65, 66, 67, 68, 69, 70, 71, 72
            ],
            "dims": [5, 3, 1, 3, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              3154, 3196, 3829, 3880, 4504, 4564, 5179, 5248, 454, 460, 1129, 1144, 1804, 1828, 2479, 2512, 5854, 5932,
              6529, 6616, 7204, 7300, 7879, 7984, 3406, 3448, 4135, 4186, 4864, 4924, 5593, 5662, 490, 496, 1219, 1234,
              1948, 1972, 2677, 2710, 6322, 6400, 7051, 7138, 7780, 7876, 8509, 8614, 3658, 3700, 4441, 4492, 5224,
              5284, 6007, 6076, 526, 532, 1309, 1324, 2092, 2116, 2875, 2908, 6790, 6868, 7573, 7660, 8356, 8452, 9139,
              9244, 130, 172, 157, 208, 184, 244, 211, 280, 22, 28, 49, 64, 76, 100, 103, 136, 238, 316, 265, 352, 292,
              388, 319, 424, 382, 424, 463, 514, 544, 604, 625, 694, 58, 64, 139, 154, 220, 244, 301, 334, 706, 784,
              787, 874, 868, 964, 949, 1054, 634, 676, 769, 820, 904, 964, 1039, 1108, 94, 100, 229, 244, 364, 388, 499,
              532, 1174, 1252, 1309, 1396, 1444, 1540, 1579, 1684, 886, 928, 1075, 1126, 1264, 1324, 1453, 1522, 130,
              136, 319, 334, 508, 532, 697, 730, 1642, 1720, 1831, 1918, 2020, 2116, 2209, 2314, 1138, 1180, 1381, 1432,
              1624, 1684, 1867, 1936, 166, 172, 409, 424, 652, 676, 895, 928, 2110, 2188, 2353, 2440, 2596, 2692, 2839,
              2944, 1390, 1432, 1687, 1738, 1984, 2044, 2281, 2350, 202, 208, 499, 514, 796, 820, 1093, 1126, 2578,
              2656, 2875, 2962, 3172, 3268, 3469, 3574, 1642, 1684, 1993, 2044, 2344, 2404, 2695, 2764, 238, 244, 589,
              604, 940, 964, 1291, 1324, 3046, 3124, 3397, 3484, 3748, 3844, 4099, 4204, 1894, 1936, 2299, 2350, 2704,
              2764, 3109, 3178, 274, 280, 679, 694, 1084, 1108, 1489, 1522, 3514, 3592, 3919, 4006, 4324, 4420, 4729,
              4834, 2146, 2188, 2605, 2656, 3064, 3124, 3523, 3592, 310, 316, 769, 784, 1228, 1252, 1687, 1720, 3982,
              4060, 4441, 4528, 4900, 4996, 5359, 5464, 2398, 2440, 2911, 2962, 3424, 3484, 3937, 4006, 346, 352, 859,
              874, 1372, 1396, 1885, 1918, 4450, 4528, 4963, 5050, 5476, 5572, 5989, 6094, 2650, 2692, 3217, 3268, 3784,
              3844, 4351, 4420, 382, 388, 949, 964, 1516, 1540, 2083, 2116, 4918, 4996, 5485, 5572, 6052, 6148, 6619,
              6724, 2902, 2944, 3523, 3574, 4144, 4204, 4765, 4834, 418, 424, 1039, 1054, 1660, 1684, 2281, 2314, 5386,
              5464, 6007, 6094, 6628, 6724, 7249, 7354
            ],
            "dims": [5, 3, 3, 4, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 5D with 2D tensors",
        "inputs": [
          {
            "data": [
              49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
              75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100,
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
              122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
              143, 144, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
              27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 145, 146, 147,
              148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
              169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
              190, 191, 192
            ],
            "dims": [4, 3, 2, 2, 4],
            "type": "float32"
          },
          {
            "data": [1, 2, 1, 3, 2, 3, 1, 2],
            "dims": [4, 2],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              253, 505, 273, 545, 293, 585, 313, 625, 333, 665, 353, 705, 373, 745, 393, 785, 413, 825, 433, 865, 453,
              905, 473, 945, 493, 985, 513, 1025, 533, 1065, 553, 1105, 573, 1145, 593, 1185, 613, 1225, 633, 1265, 653,
              1305, 673, 1345, 693, 1385, 713, 1425, 13, 25, 33, 65, 53, 105, 73, 145, 93, 185, 113, 225, 133, 265, 153,
              305, 173, 345, 193, 385, 213, 425, 233, 465, 733, 1465, 753, 1505, 773, 1545, 793, 1585, 813, 1625, 833,
              1665, 853, 1705, 873, 1745, 893, 1785, 913, 1825, 933, 1865, 953, 1905
            ],
            "dims": [4, 3, 2, 2, 2],
            "type": "float32"
          }
        ]
      },
      {
        "name": "multiplies 5D with 3D",
        "inputs": [
          {
            "data": [
              73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
              12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
              38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
              64, 65, 66, 67, 68, 69, 70, 71, 72
            ],
            "dims": [5, 3, 1, 2, 3],
            "type": "float32"
          },
          {
            "data": [
              13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 25, 26, 27, 28, 29,
              30, 31, 32, 33, 34, 35, 36
            ],
            "dims": [3, 3, 4],
            "type": "float32"
          }
        ],
        "outputs": [
          {
            "data": [
              3782, 4004, 4226, 4448, 3935, 4166, 4397, 4628, 1118, 1340, 1562, 1784, 1163, 1394, 1625, 1856, 6446,
              6668, 6890, 7112, 6707, 6938, 7169, 7400, 4088, 4328, 4568, 4808, 4241, 4490, 4739, 4988, 1208, 1448,
              1688, 1928, 1253, 1502, 1751, 2000, 6968, 7208, 7448, 7688, 7229, 7478, 7727, 7976, 4394, 4652, 4910,
              5168, 4547, 4814, 5081, 5348, 1298, 1556, 1814, 2072, 1343, 1610, 1877, 2144, 7490, 7748, 8006, 8264,
              7751, 8018, 8285, 8552, 110, 116, 122, 128, 263, 278, 293, 308, 38, 44, 50, 56, 83, 98, 113, 128, 182,
              188, 194, 200, 443, 458, 473, 488, 416, 440, 464, 488, 569, 602, 635, 668, 128, 152, 176, 200, 173, 206,
              239, 272, 704, 728, 752, 776, 965, 998, 1031, 1064, 722, 764, 806, 848, 875, 926, 977, 1028, 218, 260,
              302, 344, 263, 314, 365, 416, 1226, 1268, 1310, 1352, 1487, 1538, 1589, 1640, 1028, 1088, 1148, 1208,
              1181, 1250, 1319, 1388, 308, 368, 428, 488, 353, 422, 491, 560, 1748, 1808, 1868, 1928, 2009, 2078, 2147,
              2216, 1334, 1412, 1490, 1568, 1487, 1574, 1661, 1748, 398, 476, 554, 632, 443, 530, 617, 704, 2270, 2348,
              2426, 2504, 2531, 2618, 2705, 2792, 1640, 1736, 1832, 1928, 1793, 1898, 2003, 2108, 488, 584, 680, 776,
              533, 638, 743, 848, 2792, 2888, 2984, 3080, 3053, 3158, 3263, 3368, 1946, 2060, 2174, 2288, 2099, 2222,
              2345, 2468, 578, 692, 806, 920, 623, 746, 869, 992, 3314, 3428, 3542, 3656, 3575, 3698, 3821, 3944, 2252,
              2384, 2516, 2648, 2405, 2546, 2687, 2828, 668, 800, 932, 1064, 713, 854, 995, 1136, 3836, 3968, 4100,
              4232, 4097, 4238, 4379, 4520, 2558, 2708, 2858, 3008, 2711, 2870, 3029, 3188, 758, 908, 1058, 1208, 803,
              962, 1121, 1280, 4358, 4508, 4658, 4808, 4619, 4778, 4937, 5096, 2864, 3032, 3200, 3368, 3017, 3194, 3371,
              3548, 848, 1016, 1184, 1352, 893, 1070, 1247, 1424, 4880, 5048, 5216, 5384, 5141, 5318, 5495, 5672, 3170,
              3356, 3542, 3728, 3323, 3518, 3713, 3908, 938, 1124, 1310, 1496, 983, 1178, 1373, 1568, 5402, 5588, 5774,
              5960, 5663, 5858, 6053, 6248, 3476, 3680, 3884, 4088, 3629, 3842, 4055, 4268, 1028, 1232, 1436, 1640,
              1073, 1286, 1499, 1712, 5924, 6128, 6332, 6536, 6185, 6398, 6611, 6824
            ],
            "dims": [5, 3, 3, 2, 4],
            "type": "float32"
          }
        ]
      }
    ]
  }
]
