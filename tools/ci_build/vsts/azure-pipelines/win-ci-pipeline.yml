trigger: none

jobs:
- job: Onnxruntime_Win_CPU

  timeoutInMinutes: 60

  strategy:
    maxParallel: 2
    matrix:
      Debug:
        buildConfig: Debug
      Release:
        buildConfig: Release

  variables:
  - name: buildDirectory # currently some csproj files depend on this variable - would be nice if they didn't
    value: $(Build.BinariesDirectory)
  - group: AzureKeyVault # for $(AZURESASKEY)

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - template: templates/set-test-data-variables-step.yml

  - task: ms-vscs-artifact.build-tasks.artifactDropDownloadTask-1.artifactDropDownloadTask@0
    displayName: 'Download python installer from Artifact Services Drop'
    inputs:
      dropServiceURI: 'https://aiinfra.artifacts.visualstudio.com/DefaultCollection'
      buildNumber: miniconda3/4.4.10/x64
      destinationPath: '$(Build.BinariesDirectory)\installer\python'

  - task: ms-vscs-artifact.build-tasks.artifactDropDownloadTask-1.artifactDropDownloadTask@0
    displayName: 'Download cmake'
    inputs:
      dropServiceURI: 'https://aiinfra.artifacts.visualstudio.com/DefaultCollection'
      buildNumber: cmake/x64/3.12.4/2
      destinationPath: '$(Build.BinariesDirectory)\packages\cmake'
    timeoutInMinutes: 10

  - task: CmdLine@1
    displayName: 'Run python installer'
    inputs:
      filename: '$(Build.BinariesDirectory)\installer\python\installer.exe'
      arguments: '/S /NoRegistry=1 /AddToPath=0 /RegisterPython=0 /D=$(Build.BinariesDirectory)\packages\python'
    timeoutInMinutes: 10

  - task: BatchScript@1
    displayName: 'Setup VS2017 env vars'
    inputs:
      filename: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat'
      modifyEnvironment: true

  - task: CmdLine@1
    displayName: 'Run build script'
    inputs:
      filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
      arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --build_dir $(Build.BinariesDirectory) --config $(buildConfig) --cmake_path $(Build.BinariesDirectory)\packages\cmake\bin\cmake.exe --ctest_path $(Build.BinariesDirectory)\packages\cmake\bin\ctest.exe --skip_submodule_sync --enable_pybind --use_mkldnn --use_mklml --use_tvm --build_shared_lib --enable_msinternal --build_csharp --enable_onnx_tests --test_data_url $(TestDataUrl) --test_data_checksum $(TestDataChecksum) --azure_sas_key="$(AZURESASKEY)"'

  - task: PublishTestResults@2
    displayName: 'Publish unit test results'
    inputs:
      testResultsFiles: '**\*.results.xml'
      searchFolder: '$(Build.BinariesDirectory)'
      testRunTitle: 'Unit Test Run'
    condition: succeededOrFailed()

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'

  - template: templates/clean-agent-build-directory-step.yml
