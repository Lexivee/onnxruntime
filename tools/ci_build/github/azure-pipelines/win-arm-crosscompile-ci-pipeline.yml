jobs:
- job: Windows_ARM_CrossCompile_CI_Dev
  variables:
    buildDirectory: '$(Build.BinariesDirectory)'
  steps:
    - template: templates/set-test-data-variables-step.yml
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(Build.SourcesDirectory)\csharp\OnnxRuntime.CSharp.sln'
        feedsToUse: config
        nugetConfigPath: '$(Build.SourcesDirectory)\csharp\Nuget.CSharp.config'
        restoreDirectory: '$(Build.SourcesDirectory)\csharp'
    - task: UniversalPackages@0
      displayName: 'Download python'
      inputs:
        command: download
        vstsFeed: '$(System.TeamProject)'
        vstsFeedPackage: 'miniconda3_win64'
        vstsPackageVersion: '4.5.11'
        downloadDirectory: '$(Build.BinariesDirectory)\python'
    - task: CmdLine@1
      displayName: 'Run python installer'
      inputs:
        filename: '$(Build.BinariesDirectory)\python\installer.exe'
        arguments: '/S /NoRegistry=1 /AddToPath=0 /RegisterPython=0 /D=$(Build.BinariesDirectory)\packages\python'
      timeoutInMinutes: 10
    - task: BatchScript@1
      displayName: 'setup env'
      inputs:
        filename: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\setup_env.bat'
        modifyEnvironment: true
        workingFolder: '$(Build.BinariesDirectory)'
    - task: CmdLine@1
      displayName: 'Install conda modules'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\scripts\conda.exe'
        arguments: 'install -q --insecure -y pyopenssl setuptools wheel numpy'
      timeoutInMinutes: 10
    - task: CmdLine@1
      displayName: 'Download cmake'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\github\windows\download_cmake.py --build_dir $(Build.BinariesDirectory)'
    - task: CmdLine@1
      displayName: 'Generate cmake config and build Debug'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --config Debug --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --arm'
        workingDirectory: "$(Build.BinariesDirectory)"
    - task: CmdLine@1
      displayName: 'Generate cmake config and build Release'
      inputs:
        filename: '$(Build.BinariesDirectory)\packages\python\python.exe'
        arguments: '$(Build.SourcesDirectory)\tools\ci_build\build.py --config Release --build_dir $(Build.BinariesDirectory) --skip_submodule_sync --cmake_path $(Build.BinariesDirectory)\cmake\bin\cmake.exe --arm'
        workingDirectory: "$(Build.BinariesDirectory)"