variables:
  build_config: Release

jobs:

- job: ReactNative_CI
  pool:
    vmImage: 'macOS-11'
  timeoutInMinutes: 120
  steps:
  # Onnx has no 3.9 python package available yet, need to use python 3.8 to avoid build onnx package
  # pythonVersion can be updated in Azure pipeline settings
  # https://dev.azure.com/onnxruntime/onnxruntime/_build?definitionId=53
  - task: UsePythonVersion@0
    displayName: Use Python $(pythonVersion)
    inputs:
      versionSpec: $(pythonVersion)

  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'

  - script:
      brew install coreutils ninja npm yarn
    displayName: Install coreutils, ninja, npm, and yarn

  - script:
      /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
    displayName: Setup gradle wrapper to use gradle 6.8.3

  - script: |
      python3 -m pip install -q flatbuffers
    workingDirectory: '$(Build.BinariesDirectory)'
    displayName: Install python modules

  - script: |
      npm ci
    workingDirectory: '$(Build.SourcesDirectory)/js'
    displayName: npm ci js
  
  - script: |
      npm ci
    workingDirectory: '$(Build.SourcesDirectory)/js/common'
    displayName: npm ci js/common

  - script: |
      yarn
    workingDirectory: '$(Build.SourcesDirectory)/js/react_native'
    displayName: yarn js/react_native

  - script: |
      yarn bootstrap
    workingDirectory: '$(Build.SourcesDirectory)/js/react_native'
    displayName: Bootstrap Android and iOS e2e tests

  - task: Xcode@5
    inputs:
      actions: 'test'
      configuration: 'Debug'
      sdk: 'iphonesimulator'
      xcWorkspacePath: '$(Build.SourcesDirectory)/js/react_native/e2e/ios/OnnxruntimeModuleExample.xcworkspace'
      scheme: 'OnnxruntimeModuleExample'
      packageApp: false
      destinationPlatformOption: 'iOS'
      destinationSimulators: 'iPhone 13,OS=latest'
      workingDirectory: '$(Build.SourcesDirectory)/js/react_native/e2e/ios'
      xcprettyArgs: '--output build/reports/test-results.xml'
      publishJUnitResults: true
      testRunTitle: 'React Native iOS e2e Test Results'
    displayName: Run React Native iOS e2e Tests

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(Build.SourcesDirectory)/js/react_native/e2e/ios/build/reports/test-results.xml'
      failTaskOnFailedTests: true
      testRunTitle: 'React Native iOS e2e Test results'
    condition: succeededOrFailed()
    displayName: Publish React Native iOS e2e Test Results

  - script: |
      git restore .
    workingDirectory: '$(Build.SourcesDirectory)/js/react_native'
    displayName: Restore changes for e2e tests

  - task: PowerShell@2
    inputs:
      filePath: '$(Build.SourcesDirectory)/tools/ci_build/github/js/pack-npm-packages.ps1'
      arguments: '$(NpmPackagingMode) $(Build.SourcesDirectory) react_native'
      errorActionPreference: stop
    displayName: Pack NPM packages

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)/js/react_native
      contents: onnxruntime-react_native-*.tgz
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: Create Artifacts onnxruntime-react-native
  
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'NPM_packages'
      targetPath: '$(Build.ArtifactStagingDirectory)'
    displayName: Publish Pipeline Artifact

  - template: templates/component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'

  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: Clean Agent Directories
    condition: always()
