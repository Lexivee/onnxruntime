jobs:
- job: Build_CPU_EP
  pool: Linux-CPU-2019
  timeoutInMinutes: 30
  steps:
  # Onnx has no 3.9 python package available yet, need to use python 3.8 to avoid build onnx package
  # pythonVersion can be updated in Azure pipeline settings
  # https://dev.azure.com/onnxruntime/onnxruntime/_build?definitionId=53
  - task: UsePythonVersion@0
    displayName: Use Python $(pythonVersion)
    inputs:
      versionSpec: $(pythonVersion)

  - script: sudo apt-get update -y && sudo apt-get install -y coreutils ninja-build
    displayName: Install coreutils and ninja

  - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
    displayName: Setup gradle wrapper to use gradle 6.8.3

  # We build the host protoc to <ORT_ROOT>/protobuf_install
  - script: |
      /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/apple/build_host_protoc.sh \
        $(Build.SourcesDirectory) \
        $(Build.BinariesDirectory)/protobuf \
        $(Build.SourcesDirectory)/protobuf_install
    displayName: Build Host Protoc

  - script: |
      export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
      export ANDROID_HOME=/usr/local/lib/android/sdk
      export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
      export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk-bundle
      env | grep ANDROID
    displayName: set Android ENVs

  # Start switching to jdk 11 after the Android Emulator is started since Android SDK manager requires java 8
  - task: JavaToolInstaller@0
    displayName: Use jdk 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - script: |
      python3 tools/ci_build/build.py \
        --android \
        --build_dir build \
        --android_sdk_path $ANDROID_HOME \
        --android_ndk_path $ANDROID_NDK_HOME \
        --android_abi=x86_64 \
        --android_api=30 \
        --skip_submodule_sync \
        --parallel \
        --cmake_generator=Ninja \
        --path_to_protoc_exe $(Build.SourcesDirectory)/protobuf_install/bin/protoc \
        --build_java \
        --skip_tests
    displayName: CPU EP, Build
- job: Test_CPU_EP
  vmImage: 'macOS-11'
  dependsOn: Build_CPU_EP
  steps:
    - script: echo "Hi"
      displayName: Hi
