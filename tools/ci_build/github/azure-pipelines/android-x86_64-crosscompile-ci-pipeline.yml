# Known Limits
# 1. Anchors are not supported in GHA
# https://github.community/t/support-for-yaml-anchors/16128/90
# 2. today most cloud-based CI services are still lacking hardware acceleration support from the host VM,
# which is the no.1 blocker for running tests on modern Android Emulators (especially on recent API levels) on CI.

stages:
- stage: BUILD_STAGE
  jobs:
  - job: Build_CPU_EP
    pool: Linux-CPU-2019
    workspace:
      clean: all
    timeoutInMinutes: 30
    steps:
    # Onnx has no 3.9 python package available yet, need to use python 3.8
    # to avoid build onnx package
    # pythonVersion can be updated in Azure pipeline settings
    # https://dev.azure.com/onnxruntime/onnxruntime/_build?definitionId=53
    - task: UsePythonVersion@0
      displayName: Use Python $(pythonVersion)
      inputs:
        versionSpec: $(pythonVersion)

    - script: sudo apt-get update -y && sudo apt-get install -y coreutils ninja-build
      displayName: Install coreutils and ninja

    - template: "templates/use-android-ndk.yml"

    - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
      displayName: Setup gradle wrapper to use gradle 6.8.3

    # We build the host protoc to <ORT_ROOT>/protobuf_install
    - script: |
        /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/apple/build_host_protoc.sh \
          $(Build.SourcesDirectory) \
          $(Build.BinariesDirectory)/protobuf \
          $(Build.SourcesDirectory)/protobuf_install
      displayName: Build Host Protoc

    - script: |
        env | grep ANDROID
      displayName: View Android ENVs

    # Start switching to jdk 11 after the Android Emulator is started
    # since Android SDK manager requires java 8
    - task: JavaToolInstaller@0
      displayName: Use jdk 11
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - script: |
        python3 tools/ci_build/build.py \
          --android \
          --build_dir build \
          --android_sdk_path $ANDROID_HOME \
          --android_ndk_path $ANDROID_NDK_HOME \
          --android_abi=x86_64 \
          --android_api=30 \
          --skip_submodule_sync \
          --parallel \
          --cmake_generator=Ninja \
          --path_to_protoc_exe $(Build.SourcesDirectory)/protobuf_install/bin/protoc \
          --build_java \
          --skip_tests
      displayName: CPU EP, Build

    - task: CopyFiles@2
      displayName: Copy apks
      inputs:
        contents: 'build/**/*.apk'
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true

    - task: CopyFiles@2
      displayName: Copy test data
      inputs:
        contents: 'build/**/testdata/**'
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true

    - task: CopyFiles@2
      displayName: Copy test executables
      inputs:
        contents: |
          build/Debug/*
          build/Debug/java/androidtest/android/**
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: CPUBuildOutput

    - template: templates/clean-agent-build-directory-step.yml

- stage: TEST_STAGE
  dependsOn: BUILD_STAGE
  jobs:
  - job: Test_CPU_EP
    pool:
      vmImage: 'macOS-11'
    workspace:
      clean: all
    condition: succeeded()
    steps:
      - script: |
          set -ex
          system_profiler SPSoftwareDataType SPHardwareDataType
          echo hi
        displayName: 'Mac Agent Info'

      - task: DownloadPipelineArtifact@2
        inputs:
          source: 'specific'
          project: 'onnxruntime'
          pipeline: 53
          runVersion: 'specific'
          artifact: 'CPUBuildOutput'
          path: $(Build.SourcesDirectory)

      - task: UsePythonVersion@0
        displayName: Use Python $(pythonVersion)
        inputs:
          versionSpec: $(pythonVersion)

      - template: "templates/use-android-ndk.yml"

      - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
        displayName: Setup gradle wrapper to use gradle 6.8.3

      - script: |
          python3 tools/python/run_android_emulator.py \
          --android-sdk-root ${ANDROID_SDK_ROOT} \
          --create-avd --system-image "system-images;android-30;google_apis;x86_64" \
          --start --emulator-extra-args="-partition-size 4096" \
          --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
        displayName: Start Android emulator

      # Start switching to jdk 11 after the Android Emulator is started
      # since Android SDK manager requires java 8
      - task: JavaToolInstaller@0
        displayName: Use jdk 11
        inputs:
          versionSpec: '11'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - script: |
          python3 tools/ci_build/build.py \
          --android \
          --build_dir build \
          --android_sdk_path $ANDROID_HOME \
          --android_ndk_path $ANDROID_NDK_HOME \
          --android_abi=x86_64 \
          --android_api=30 \
          --build_java \
          --test
        displayName: CPU EP, Test on Android Emulator

      - script: |
          python3 tools/python/run_android_emulator.py \
            --android-sdk-root ${ANDROID_SDK_ROOT} \
            --stop \
            --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
        displayName: Stop Android emulator
        condition: always()

      - template: templates/clean-agent-build-directory-step.yml
