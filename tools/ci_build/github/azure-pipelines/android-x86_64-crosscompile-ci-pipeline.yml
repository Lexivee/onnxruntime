jobs:
- job: Build_CPU_EP
  pool: Linux-CPU-2019
  timeoutInMinutes: 120
  steps:
  # Onnx has no 3.9 python package available yet, need to use python 3.8 to avoid build onnx package
  # pythonVersion can be updated in Azure pipeline settings
  # https://dev.azure.com/onnxruntime/onnxruntime/_build?definitionId=53
  - task: UsePythonVersion@0
    displayName: Use Python $(pythonVersion)
    inputs:
      versionSpec: $(pythonVersion)

  - script: sudo apt-get update -y && sudo apt-get install -y coreutils ninja-build
    displayName: Install coreutils and ninja

  - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
    displayName: Setup gradle wrapper to use gradle 6.8.3

  # We build the host protoc to <ORT_ROOT>/protobuf_install
  - script: |
      /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/apple/build_host_protoc.sh \
        $(Build.SourcesDirectory) \
        $(Build.BinariesDirectory)/protobuf \
        $(Build.SourcesDirectory)/protobuf_install
    displayName: Build Host Protoc

  - script: |
      export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
      export ANDROID_HOME=/usr/local/lib/android/sdk
      export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
      export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk-bundle
      env | grep ANDROID
    displayName: set Android ENVs

  # Start switching to jdk 11 after the Android Emulator is started since Android SDK manager requires java 8
  - task: JavaToolInstaller@0
    displayName: Use jdk 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'

  - script: |
      python3 tools/ci_build/build.py \
        --android \
        --build_dir build \
        --android_sdk_path $ANDROID_HOME \
        --android_ndk_path $ANDROID_NDK_HOME \
        --android_abi=x86_64 \
        --android_api=30 \
        --config Release \
        --skip_submodule_sync \
        --parallel \
        --cmake_generator=Ninja \
        --path_to_protoc_exe $(Build.SourcesDirectory)/protobuf_install/bin/protoc \
        --build_java \
        --skip_tests
       ls -ld $(find build)
    displayName: CPU EP, Build

  - task: CopyFiles@2
    inputs:
      contents: 'build/**'
      targetFolder: $(Build.ArtifactStagingDirectory)
      overWrite: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: MyBuildOutput

- job: Test_CPU_EP
  pool:
    vmImage: 'macOS-11'
  dependsOn: Build_CPU_EP
  condition: succeeded()
  steps:
    - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
      displayName: Setup gradle wrapper to use gradle 6.8.3

    - script: echo '$(System.ArtifactsDirectory)'
      displayName: check root directory

    - task: DownloadPipelineArtifact@2
      inputs:
        source: 'current'
        artifact: 'MyBuildOutput'
        path: $(Build.SourcesDirectory)

    - script: pwd && ls && ls build
      displayName: check root directory
  
    - script: |
        python3 tools/python/run_android_emulator.py \
        --android-sdk-root ${ANDROID_SDK_ROOT} \
        --create-avd --system-image "system-images;android-30;google_apis;x86_64" \
        --start --emulator-extra-args="-partition-size 4096" \
        --emulator-pid-file $(Build.BinariesDirectory)/emulator.pid
      displayName: Start Android emulator

    - script: |
        python3 tools/ci_build/build.py \
        --android \
        --build_dir build \
        --android_sdk_path $ANDROID_HOME \
        --android_ndk_path $ANDROID_NDK_HOME \
        --android_abi=x86_64 \
        --android_api=30 \
        --test
      displayName: CPU EP, Test on Android Emulator

- job: Build_NNAPI_EP
  pool: Linux-CPU-2019
  timeoutInMinutes: 30
  steps:
  # Onnx has no 3.9 python package available yet, need to use python 3.8 to avoid build onnx package
  # pythonVersion can be updated in Azure pipeline settings
  # https://dev.azure.com/onnxruntime/onnxruntime/_build?definitionId=53
  - task: UsePythonVersion@0
    displayName: Use Python $(pythonVersion)
    inputs:
      versionSpec: $(pythonVersion)

  - script: sudo apt-get update -y && sudo apt-get install -y coreutils ninja-build
    displayName: Install coreutils and ninja

  - script: /bin/bash tools/ci_build/github/android/setup_gradle_wrapper.sh $(pwd)
    displayName: Setup gradle wrapper to use gradle 6.8.3

  # We build the host protoc to <ORT_ROOT>/protobuf_install
  - script: |
      /bin/bash $(Build.SourcesDirectory)/tools/ci_build/github/apple/build_host_protoc.sh \
        $(Build.SourcesDirectory) \
        $(Build.BinariesDirectory)/protobuf \
        $(Build.SourcesDirectory)/protobuf_install
    displayName: Build Host Protoc

  - script: |
      export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
      export ANDROID_HOME=/usr/local/lib/android/sdk
      export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk-bundle
      export ANDROID_NDK_ROOT=/usr/local/lib/android/sdk/ndk-bundle
      env | grep ANDROID
    displayName: set Android ENVs

  # Start switching to jdk 11 after the Android Emulator is started since Android SDK manager requires java 8
  - task: JavaToolInstaller@0
    displayName: Use jdk 11
    inputs:
      versionSpec: '11'
      jdkArchitectureOption: 'x64'
      jdkSourceOption: 'PreInstalled'
  - script: |
      python3 tools/ci_build/build.py \
        --android \
        --build_dir build_nnapi \
        --android_sdk_path $ANDROID_HOME \
        --android_ndk_path $ANDROID_NDK_HOME \
        --android_abi=x86_64 \
        --android_api=29 \
        --skip_submodule_sync \
        --parallel \
        --use_nnapi \
        --cmake_generator=Ninja \
        --path_to_protoc_exe $(Build.SourcesDirectory)/protobuf_install/bin/protoc \
        --build_java \
        --skip_tests
    displayName: NNAPI EP, Build
