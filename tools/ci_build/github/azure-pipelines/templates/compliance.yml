parameters:
- name: msbuildPlatform
  displayName: msbuildPlatform
  type: string
  default: x64

- name: vs2022
  displayName: If the Visual Studio version is 2022
  type: boolean
  default: true

steps:
- task: CredScan@2
  displayName: 'Run CredScan'
  inputs:
    toolMajorVersion: V2
    debugMode: false
  continueOnError: true

- task: BinSkim@3
  displayName: 'Run BinSkim'
  inputs:
    arguments: 'analyze $(Build.BinariesDirectory)\RelWithDebInfo\RelWithDebInfo\*.dll  --recurse --verbose'
  continueOnError: true

- task: DeleteFiles@1
  displayName: 'Delete files from $(Build.BinariesDirectory)\RelWithDebInfo'
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)\RelWithDebInfo'
    Contents: |
     **/*.obj
     **/*.pdb
     **/*.dll

# Manually set msBuildCommandline so that we can also set CAExcludePath
# build_dir must be a sub folder of $(Build.SourcesDirectory)
# TODO: move this step to a CPU-only machine to save GPU resources.
- task: SDLNativeRules@3
  displayName: 'Run the PREfast SDL Native Rules for MSBuild'
  inputs:
    msBuildArchitecture: amd64
    setupCommandlines: 'python $(Build.SourcesDirectory)\tools\ci_build\build.py --config RelWithDebInfo --build_dir $(Build.SourcesDirectory)\b --skip_submodule_sync --build_shared_lib --update --cmake_generator "Visual Studio 17 2022" --build_shared_lib --enable_onnx_tests ${{ parameters.additionalBuildFlags }} --cmake_extra_defines onnxruntime_ENABLE_STATIC_ANALYSIS=ON'
    msBuildCommandline: '"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\amd64\msbuild.exe" "$(Build.SourcesDirectory)\b\RelWithDebInfo\onnxruntime.sln" /p:RunCodeAnalysis=true /p:platform=${{ parameters.msbuildPlatform }} /p:configuration=RelWithDebInfo /p:VisualStudioVersion="17.0" /m /p:PreferredToolArchitecture=x64'
    excludedPaths: '$(Build.SourcesDirectory)\b#$(Build.SourcesDirectory)\cmake#C:\program files#C:\program files (x86)#C:\program files'
    rulesetName: Custom
    customRuleset: $(Build.SourcesDirectory)\cmake\Sdl.ruleset
    publishXML: true

- task: SdtReport@2
  displayName: 'Create Security Analysis Report'
  inputs:
    SDLNativeRules: true

- task: PublishSecurityAnalysisLogs@3
  displayName: 'Publish Security Analysis Logs'
  continueOnError: true

- task: TSAUpload@2
  displayName: 'TSA upload'
  condition: and (succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  inputs:
    GdnPublishTsaOnboard: false
    GdnPublishTsaConfigFile: '$(Build.sourcesDirectory)\.gdn\.gdntsa'
  continueOnError: true
