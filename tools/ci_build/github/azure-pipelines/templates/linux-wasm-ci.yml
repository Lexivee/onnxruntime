parameters:
- name: CommitOverride
  type: boolean
  default: false

- name: BuildConfig
  type: string
  default: 'Debug'

- name: ExtraBuildArgs
  type: string
  default: ''

- name: PoolName
  type: string
  default: 'onnxruntime-Ubuntu2004-AMD-CPU'

- name: SkipPublish
  type: boolean
  default: false

- name: TimeoutInMinutes
  default: 180

- name: BuildJsep
  type: boolean
  default: false

jobs:
- job: build_WASM
  pool:
    name: ${{ parameters.PoolName }}
  variables:
    EnvSetupScript: setup_env.bat
    buildArch: x64
    CommonBuildArgs: '--parallel --config ${{ parameters.BuildConfig }} --skip_submodule_sync --build_wasm --use_xnnpack --emsdk_version releases-7c905cfc1ca6699f6ccb288ae174902cfbdcf0a2-64bit ${{ parameters.ExtraBuildArgs }}'
    runCodesignValidationInjection: false
    TODAY: $[format('{0:dd}{0:MM}{0:yyyy}', pipeline.startTime)]
    ORT_CACHE_DIR: $(Agent.TempDirectory)/ort_ccache
  timeoutInMinutes: ${{ parameters.TimeoutInMinutes }}
  workspace:
    clean: all
  steps:
  - task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
    displayName: 'Clean Agent Directories'
    condition: always()
  - checkout: self
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: '__commit'
      path: $(Pipeline.Workspace)
    displayName: 'Get commit SHA'
    condition: eq('${{ parameters.CommitOverride }}', 'true')
  - script: |
     export __commit__=<$(Pipeline.Workspace)/__commit.txt
     git fetch origin +$__commit__:refs/remotes/origin/$__commit__
     git checkout --force $__commit__
    workingDirectory: '$(Build.SourcesDirectory)'
    displayName: 'Read commit SHA and checkout'
    condition: eq('${{ parameters.CommitOverride }}', 'true')
  - script: |
     git submodule sync --recursive
     git submodule update --init --recursive
    workingDirectory: '$(Build.SourcesDirectory)'
    displayName: 'Checkout submodules'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.8'
      addToPath: true
      architecture: $(buildArch)
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
  - template: download-deps.yml

  - task: PythonScript@0
    displayName: 'Update deps.txt'
    inputs:
      scriptPath: $(Build.SourcesDirectory)/tools/ci_build/replace_urls_in_deps.py
      arguments: --new_dir $(Build.BinariesDirectory)/deps
      workingDirectory: $(Build.BinariesDirectory)

  - script: |
      set -ex
      cd '$(Build.SourcesDirectory)/cmake/external/emsdk'
      ./emsdk install 3.1.37 ccache-git-emscripten-64bit
      ./emsdk activate 3.1.37 ccache-git-emscripten-64bit
    displayName: 'emsdk install and activate ccached emscripten'

  #- task: PythonScript@0
  #  displayName: 'Build and test (node)'
  #  inputs:
  #    scriptPath: '$(Build.SourcesDirectory)/tools/ci_build/build.py'
  #    arguments: '$(CommonBuildArgs) --build_dir $(Build.BinariesDirectory)/wasm'
  #    workingDirectory: '$(Build.BinariesDirectory)'
  #- task: PythonScript@0
  #  displayName: 'Build and test (node) (threads)'
  #  inputs:
  #    scriptPath: '$(Build.SourcesDirectory)/tools/ci_build/build.py'
  #    arguments: '$(CommonBuildArgs) --build_dir $(Build.BinariesDirectory)/wasm_threads --enable_wasm_threads'
  #    workingDirectory: '$(Build.BinariesDirectory)'
  #- task: PythonScript@0
  #  displayName: 'Build and test (browser) (simd + threads)'
  #  inputs:
  #    scriptPath: '$(Build.SourcesDirectory)\tools\ci_build\build.py'
  #    arguments: '$(CommonBuildArgs) --build_dir $(Build.BinariesDirectory)\wasm_simd_threads --enable_wasm_simd --enable_wasm_threads --wasm_run_tests_in_browser'
  #    workingDirectory: '$(Build.BinariesDirectory)'
  - template: build-wasm-with-cache.yml
    parameters:
      Today: $(Today)
      AdditionalKey: wasm_simd_threads
      CacheDir: $(ORT_CACHE_DIR)/wasm_simd_threads
      Arguments: '$(CommonBuildArgs) --build_dir $(Build.BinariesDirectory)\wasm_simd_threads --enable_wasm_simd --enable_wasm_threads --wasm_run_tests_in_browser'
      ChangeEveryCommit: true

  - template: component-governance-component-detection-steps.yml
    parameters :
      condition : 'succeeded'
