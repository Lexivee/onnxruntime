parameters:
- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

# Must be 1 or 0
- name: AllowReleasedOpsetOnly
  displayName: Whether unreleased onnx opsets are allowed
  type: number
  default: 1
  values:
  - 1
  - 0

- name: BuildForAllArchs
  displayName: Build for all CPU ARCHs
  type: boolean

- name: WithCache
  displayName: Build with Cache
  type: boolean
  default: false

stages:
- stage: MacOS_C_API_Packaging_CPU
  dependsOn: []
  jobs:
  - template: mac-packing-jobs.yml
    parameters:
      MacosArch: 'x86_64'
      AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
      AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
      BuildForAllArchs: ${{ parameters.BuildForAllArchs }}
      WithCache: ${{ parameters.WithCache }}
  - template: mac-packing-jobs.yml
    parameters:
      MacosArch: 'arm64'
      AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
      AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
      BuildForAllArchs: ${{ parameters.BuildForAllArchs }}
      WithCache: ${{ parameters.WithCache }}
  - template: mac-packing-jobs.yml
    parameters:
      MacosArch: 'arm64'
      AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
      AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
      BuildForAllArchs: ${{ parameters.BuildForAllArchs }}
      WithCache: ${{ parameters.WithCache }}
  - job: PublishPipelineArtifactAndComponentGovernance
    pool:
      vmImage: 'macOS-12'
    workspace:
      clean: all
    dependsOn:
      - MacOS_C_API_Packaging_CPU_x86_64
      - MacOS_C_API_Packaging_CPU_arm64
      - MacOS_C_API_Packaging_CPU_universal2
    condition: or(succeeded() ,skipped())
    steps:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'onnxruntime-osx'
    - template: component-governance-component-detection-steps.yml
      parameters:
        condition: 'succeeded'