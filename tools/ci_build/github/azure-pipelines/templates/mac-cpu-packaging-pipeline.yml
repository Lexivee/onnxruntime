parameters:
- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

# Must be 1 or 0
- name: AllowReleasedOpsetOnly
  displayName: Whether unreleased onnx opsets are allowed
  type: number
  default: 1
  values:
  - 1
  - 0

- name: BuildForAllArchs
  displayName: Build for all CPU ARCHs
  type: boolean

- name: WithCache
  displayName: Build with Cache
  type: boolean
  default: false

# these 2 parameters are used for debugging.
- name: SpecificArtifact
  displayName: Use Specific Artifact (Debugging only)
  type: boolean
  default: false

- name: BuildId
  displayName: Pipeline BuildId, you could find it in the URL
  type: string
  default: '0'

stages:
- stage: MacOS_C_API_Packaging_CPU
  dependsOn: []
  jobs:
    - template: mac-cpu-packing-jobs.yml
      parameters:
        MacosArch: 'x86_64'
        AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
        AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
        WithCache: ${{ parameters.WithCache }}

    - ${{ if eq(parameters.BuildForAllArchs, true) }}:
      - template: mac-cpu-packing-jobs.yml
        parameters:
          MacosArch: 'arm64'
          AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
          AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
          WithCache: ${{ parameters.WithCache }}
      - template: mac-cpu-packing-jobs.yml
        parameters:
          MacosArch: 'universal2'
          AllowReleasedOpsetOnly: ${{ parameters.AllowReleasedOpsetOnly }}
          AdditionalBuildFlags: ${{ parameters.AdditionalBuildFlags }}
          WithCache: ${{ parameters.WithCache }}

- stage: MacOS_C_API_Package_Publish
  dependsOn: MacOS_C_API_Packaging_CPU
  jobs:
    - job: MacOS_C_API_Package_Publish
      pool: Azure-Pipelines-EO-Windows2022-aiinfra
      steps:
      - template: flex-downloadPipelineArtifact.yml
        parameters:
          StepName: 'Download Pipeline onnxruntime-osx-x86_64'
          ArtifactName: 'onnxruntime-osx-x86_64'
          TargetPath: '$(Build.ArtifactStagingDirectory)'
          SpecificArtifact: ${{ parameters.specificArtifact }}
          BuildId: ${{ parameters.BuildId }}

      - ${{ if eq(parameters.BuildForAllArchs, true) }}:
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: 'onnxruntime-osx-arm64'
            targetPath: '$(Build.ArtifactStagingDirectory)'
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: 'onnxruntime-osx-universal2'
            targetPath: '$(Build.ArtifactStagingDirectory)'

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifact: 'onnxruntime-osx'
          condition: 'succeededOrFailed()'
      - template: component-governance-component-detection-steps.yml
        parameters:
          condition: 'succeeded'
