parameters:
  - name: build_id
    type: string
  - name: project
    type: string
  - name: pipeline
    type: string
  - name: artifact_feed
    type: string
    default: 'onnxruntime-cuda-12'
  - name: depends_on
    type: string
    default: 'none'

stages:
  - stage: Python_Publishing
#    ${{ if ne(parameters.depends_on, 'none') }}:
#      dependsOn: [ ${{ parameters.depends_on }} ]
#    ${{ else }}:
#      dependsOn:
#        - Linux_Packaging_combined_GPU
    variables:
      ${{ if eq(parameters.artifact_feed, 'ort-cuda-12-nightly') }}:
        repository-url: https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ort-cuda-12-nightly/pypi/upload/
      ${{ if eq(parameters.artifact_feed, 'onnxruntime-cuda-12') }}:
        repository-url: https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/onnxruntime-cuda-12/pypi/upload/
    jobs:
      - job:
        pool: 'onnxruntime-Win-CPU-2022'
        steps:
          - checkout: none
          - script: |
                echo "Build ID: ${{ parameters.build_id }}"
                echo "Project: ${{ parameters.project }}"
                echo "Pipeline: ${{ parameters.pipeline }}"
                echo "Artifact Feed: ${{ parameters.artifact_feed }}"
            displayName: 'Print Parameters'
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'onnxruntime_gpu'
              targetPath: '$(Build.SourcesDirectory)/onnxruntime-gpu'
              ${{ if ne(parameters.build_id, 'latest') }}:
                buildType: 'specific'
                project: '${{ parameters.project }}'
                pipeline: '${{ parameters.pipeline }}'
                buildVersionToDownload: 'specific'
                buildId: '${{ parameters.build_id }}'
            displayName: 'Download Build Artifacts - onnxruntime-gpu'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.x'
          - script: 'pip install twine==3.4.2'
            displayName: 'Install Twine'
          - task: TwineAuthenticate@1
            displayName: 'Twine Authenticate '
            inputs:
              artifactFeed: PublicPackages/${{ parameters.artifact_feed }}
          - script: 'python -m twine upload -r ${{ parameters.artifact_feed }} --repository-url $(repository-url) *.whl'
            workingDirectory: '$(Build.SourcesDirectory)/onnxruntime-gpu'
            displayName: 'Uploading wheels to ${{ parameters.artifact_feed }}'
            retryCountOnTaskFailure: 3
