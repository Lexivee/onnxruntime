parameters:
- name: build_py_parameters
  displayName: >
    Extra parameters to pass to build.py. Don't put newlines in here.
  type: string
  default: ''

- name: enable_linux_gpu
  displayName: 'Whether Linux GPU package is built.'
  type: boolean
  default: true

- name: enable_windows_gpu
  displayName: 'Whether Windows GPU package is built.'
  type: boolean
  default: true

# TODO: Now the Windows jobs use a different cmake build type. Consider to merge it.
- name: cmake_build_type
  type: string
  displayName: 'Linux packages cmake build type. Linux Only.'
  default: 'Release'
  values:
   - Debug
   - Release
   - RelWithDebInfo
   - MinSizeRel

- name: cuda_version
  type: string
  displayName: 'CUDA version. Windows Only.'
  default: '12.2'
  values:
   - 11.8
   - 12.2

- name: SpecificArtifact
  displayName: Use Specific Artifact
  type: boolean
  default: false

- name: BuildId
  displayName: Specific Artifact's BuildId
  type: string
  default: '0'

- name: PythonVersions
  type: object
  displayName: 'Python versions to build'
  default:
    - '3.8'
    - '3.9'
    - '3.10'
    - '3.11'
    - '3.12'

stages:
  - ${{ if eq(parameters.enable_windows_gpu, true) }}:
    - ${{ each python_version in parameters.PythonVersions }}:
      - template: ../templates/py-win-gpu.yml
        parameters:
          PYTHON_VERSION: {{ python_version }}
          EP_BUILD_FLAGS: --use_tensorrt --tensorrt_home=$(Agent.TempDirectory)\TensorRT-8.6.1.6.Windows10.x86_64.cuda-${{parameters.cuda_version}} --cuda_home=$(Agent.TempDirectory)\v${{parameters.cuda_version}}  --cmake_extra_defines "CMAKE_CUDA_ARCHITECTURES=52;60;61;70;75;80"
          EP_NAME: gpu
          CudaVersion: ${{ parameters.cuda_version }}
          SpecificArtifact: ${{ parameters.SpecificArtifact }}
          BuildId: ${{ parameters.BuildId }}
