parameters:
  - name: build_id
    type: string
    default: 'latest'
  - name: project
    type: string
    default: 'Lotus'
  - name: pipeline
    type: string
    default: 'Nuget-CUDA-Packaging-Pipeline'
  - name: artifact_feed
    type: string
    default: 'none'
  - name: dependencies
    type: string
    default: 'none'

stages:
  - stage: NuGet_Publishing_GPU
    ${{ if ne(parameters.dependencies, 'none') }}:
      dependsOn:
    ${{ if eq(parameters.dependencies, 'none') }}:
      dependsOn: [ ]
    jobs:
      - job:
        pool: 'onnxruntime-Ubuntu2004-AMD-CPU'
        steps:
          - checkout: none
          - script: |
              echo ${{ parameters.build_id }}
              echo ${{ parameters.project }}
              echo ${{ parameters.pipeline }}
              echo ${{ parameters.artifact_feed }}

            displayName: List Downloaded Package
          - task: DownloadPipelineArtifact@2
            displayName: Download NuGet Package
            inputs:
              artifact: drop-signed-nuget-GPU
              targetPath: $(Build.BinariesDirectory)/nuget-artifact/final-package
              ${{ if ne(parameters.build_id, 'latest') }}:
                buildType: 'specific'
                project: '${{ parameters.project }}'
                pipeline: '${{ parameters.pipeline }}'
                buildVersionToDownload: 'specific'
                buildId: '${{ parameters.build_id }}'
          - script: |
              echo $(Build.BinariesDirectory)/nuget-artifact/final-package
            displayName: List Downloaded Package
          - template: ../nuget/templates/get-nuget-package-version-as-variable.yml
            parameters:
              packageFolder: '$(Build.BinariesDirectory)/nuget-artifact/final-package'

          - task: NuGetCommand@2
            displayName: 'NuGet push onnxruntime'
            inputs:
              command: push
              packagesToPush: $(Build.BinariesDirectory)/nuget-artifact/final-package/*.nupkg'
              publishVstsFeed: ${{ parameters.artifact_feed }}



