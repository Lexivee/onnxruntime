name: Update C# API Docs
on:
  push:
    branches:
      - main
    paths:
      - csharp
  workflow_dispatch:

concurrency:
  group: "apidocs-csharp"
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCFXVERSION: 2.62.2
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore csharp/ApiDocs/ApiDocs.csproj
    - name: Download DocFX
      run: |
        mkdir -p build/docfx
        wget https://github.com/dotnet/docfx/releases/download/v${DOCFXVERSION}/docfx-linux-x64-v${DOCFXVERSION}.zip -O build/docfx/docfx.zip
        unzip build/docfx/docfx.zip -d build/docfx
    - name: Install NuGet
      uses: nuget/setup-nuget@v1
    - name: Build Documentation
      run: |
        build/docfx/docfx metadata csharp/ApiDocs/docfx.json
        dotnet build csharp/ApiDocs/ApiDocs.csproj --no-restore
        build/docfx/docfx build csharp/ApiDocs/docfx.json
    - name: Log source commit
      run: git rev-parse --short HEAD > csharp/ApiDocs/csharp/source-version.txt
    - name: Download deployed site
      uses: dawidd6/action-download-artifact@v2
      with:
        name: github-pages
        workflow: jekyll-gh-pages.yml
        path: site
    - name: Unpack site
      run: |
        cd site
        tar xvf artifact.tar
    - name: Move C# docs into site
      run: |
        rm -rf site/docs/api/csharp
        mv csharp/ApiDocs/csharp site/docs/api/csharp
    - name: Upload new site
      uses: actions/upload-pages-artifact@v1
      with:
        name: github-pages
        path: site

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
